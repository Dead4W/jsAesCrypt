AesCrypt=function(){let t={version:"0.13a",bufferSize:32768,fileFormatVersion:2,maxPassLen:1024,AESBlockSize:16};var e=function(t){let e=0,r=t.size,a=new FileReader,o=t;async function i(t){return await function(t){return new Promise((n,r)=>{let i=o.slice(e,e+=t);a.onload=(()=>{n(new Uint8Array(a.result))}),a.onerror=r,a.readAsArrayBuffer(i)})}(t)}return{readByte:async function(){return(await i(1))[0]},readBytes:i,readBytesAsInt:async function(t){let e=await i(t);return n.arrToInt(e)},readBytesAsString:async function(t){let e=await i(t);return n.bytes2str(e)},getCurrentPosition:function(){return e},getLength:function(){return r}}},n={random_int:function(t,e){return Math.floor(Math.random()*(e-t)+t)},urandom:function(t){let e="";for(let n=0;n<t;n++)e+=String.fromCharCode(this.random_int(0,256));return e},fillArray:function(t,e){let n=[];for(let r=0;r<e;r++)n.push(t);return n},arrToInt:function(t){return parseInt(Array.prototype.map.call(t,t=>("00"+t.toString(16)).slice(-2)).join(""),16)},bytes2str:function(t){return CryptoJS.enc.Latin1.stringify(CryptoJS.enc.Uint8Arr.parse(t))},str2bytes:function(t){return CryptoJS.enc.Uint8Arr.decode(CryptoJS.enc.Latin1.parse(t))},encode_to_words:function(t,e="Latin1"){return CryptoJS.enc[e].parse(t)}};let r=function(t=[]){let e=new Uint8Array(t);return{appendBytes:function(t){let n;if("number"==typeof t){let e=t.toString(16);n=new Uint8Array(e.match(/.{1,2}/g).map(t=>parseInt(t,16)))}else if("string"==typeof t){n=new Uint8Array(t.length);for(let e=0;e<t.length;e++)n[e]=t.charCodeAt(e)}else n=new Uint8Array(t);let r=new Uint8Array(e.length+n.length);r.set(e),r.set(n,e.length),e=r},finalize:function(){return e},get:function(t){return e[t]}}};async function a(t,e,n){return await crypto.subtle.importKey("raw",t.buffer,e,!1,n)}async function o(t,e){let n=await a(e,{name:"HMAC",hash:{name:"SHA-256"}},["sign","verify"]);return new Uint8Array(await crypto.subtle.sign("HMAC",n,t))}async function i(t,e,n){let r=await a(e,"AES-CBC",["encrypt","decrypt"]);return new Uint8Array(await crypto.subtle.encrypt({name:"AES-CBC",iv:n},r,t))}function s(t,e){return CryptoJS.algo.AES.createDecryptor(n.encode_to_words(t),{mode:CryptoJS.mode.CBC,iv:CryptoJS.enc.Latin1.parse(e),padding:CryptoJS.pad.NoPadding})}function c(t,e){let r=n.encode_to_words(e+"\0".repeat(16));for(let e=0;e<8192;e++){let e=CryptoJS.algo.SHA256.create();e.update(r),e.update(n.encode_to_words(t,"Utf16LE")),r=e.finalize()}return r.toString(CryptoJS.enc.Latin1)}return{encrypt:async function(a,s,l=(t=>{})){if(s.length>t.maxPassLen)return console.warn("Password is too long."),!1;const y=n.urandom(t.AESBlockSize),p=c(s,y),d=n.urandom(t.AESBlockSize),u=n.urandom(32),f=n.str2bytes(u),S=function(t,e){return CryptoJS.algo.AES.createEncryptor(n.encode_to_words(t),{mode:CryptoJS.mode.CBC,iv:CryptoJS.enc.Latin1.parse(e),padding:CryptoJS.pad.NoPadding})}(p,y),w=S.process(n.encode_to_words(d+u)).toString(CryptoJS.enc.Latin1)+S.finalize().toString(CryptoJS.enc.Latin1),g=CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256,n.encode_to_words(p));return g.update(n.encode_to_words(w)),await async function(a,s,c,l,y,p,d){let u=r();u.appendBytes("AES"),u.appendBytes(t.fileFormatVersion),u.appendBytes(0);const f="jsAesCrypt "+t.version;u.appendBytes(0),u.appendBytes(1+("CREATED_BY"+f).length),u.appendBytes("CREATED_BY"),u.appendBytes(0),u.appendBytes(f),u.appendBytes([0,128]),u.appendBytes(n.fillArray(0,128)),u.appendBytes([0,0]),u.appendBytes(s),u.appendBytes(c),u.appendBytes(y.finalize().toString(CryptoJS.enc.Latin1));let S=new e(a),w=S.getLength(),g=r(await S.readBytes(S.getLength())),A=String.fromCharCode(w%t.AESBlockSize),B=n.str2bytes(p);return cText=await i(g.finalize(),l,B),w%t.AESBlockSize==0&&(cText=cText.slice(0,cText.length-16)),hmac0=await o(cText,l),u.appendBytes(cText),u.appendBytes(A),u.appendBytes(hmac0),await u.finalize()}(a,y,w,f,g,d)},decrypt:async function(l,y,p=(t=>{})){if(y.length>t.maxPassLen)return console.warn("Password is too long."),!1;let d=e(l);if("AES"!==await d.readBytesAsString(3)||d.getLength()<136)return console.warn("File is corrupted or not an AES Crypt \n(or jsAesCrypt) file."),!1;if(await d.readByte()!==t.fileFormatVersion)return console.warn("jsAesCrypt is only compatible with version \n2 of the AES Crypt file format."),!1;for(await d.readByte();;){let t=await d.readBytes(2);if(t.length<2)return console.warn("File is corrupted."),!1;if(0==(t=+n.arrToInt(t)))break;await d.readBytes(t)}let u=await d.readBytesAsString(16);if(16!==u.length)return console.warn("File is corrupted."),!1;let f=c(y,u),S=await d.readBytesAsString(48);if(48!==S.length)return console.warn("File is corrupted."),!1;let w=await d.readBytesAsString(32);if(32!==w.length)return console.warn("File is corrupted."),!1;let g=CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256,n.encode_to_words(f));if(g.update(n.encode_to_words(S)),w!==CryptoJS.enc.Latin1.stringify(g.finalize()))return console.warn("Wrong password (or file is corrupted)."),!1;let A=s(f,u),B=A.process(n.encode_to_words(S)).toString(CryptoJS.enc.Latin1)+A.finalize().toString(CryptoJS.enc.Latin1),C=B.substr(0,t.AESBlockSize),h=B.substr(t.AESBlockSize,32),m=(s(h,C),r()),E=r(await d.readBytes(d.getLength()-d.getCurrentPosition()-32-1)),_=await d.readBytesAsInt(1),J=n.str2bytes(h),z=n.str2bytes(C);if(hmac0Act=await o(E.finalize(),J),0==_){let e=new Uint8Array(t.AESBlockSize);for(let n=0;n<t.AESBlockSize;n++)e[n]=0^E.get(d.getLength()-t.AESBlockSize+n);modBlockEncrypted=await i(e,J,z),E.appendBytes(modBlockEncrypted)}let L=await async function(t,e,n){let r=await a(e,"AES-CBC",["encrypt","decrypt"]);return new Uint8Array(await crypto.subtle.decrypt({name:"AES-CBC",iv:n},r,t))}(E.finalize(),J,z);0==_&&(L=L.slice(0,L.length-t.AESBlockSize)),m.appendBytes(L);let b=await d.readBytesAsString(32);return 32!==b.length?(console.warn("File is corrupted."),!1):b!==n.bytes2str(hmac0Act)?(console.warn("Bad HMAC (file is corrupted)."),!1):m.finalize()},utils:n,info:t}};