AesCrypt=function(){let e={version:"0.15",bufferSize:32768,fileFormatVersion:2,maxPassLen:1024,AESBlockSize:16};var t=function(e){let t=0,r=e.size,a=new FileReader,i=e;async function s(e){return await function(e){return new Promise((n,r)=>{let s=i.slice(t,t+=e);a.onload=(()=>{n(new Uint8Array(a.result))}),a.onerror=r,a.readAsArrayBuffer(s)})}(e)}return{readByte:async function(){return(await s(1))[0]},readBytes:s,readBytesAsInt:async function(e){let t=await s(e);return n.arrToInt(t)},readBytesAsString:async function(e){let t=await s(e);return n.bytes2str(t)},getCurrentPosition:function(){return t},getLength:function(){return r}}},n={urandom:function(e){return crypto.getRandomValues(new Uint8Array(e))},arrToInt:function(e){return parseInt(Array.prototype.map.call(e,e=>("00"+e.toString(16)).slice(-2)).join(""),16)},bytes2str:function(e){return CryptoJS.enc.Latin1.stringify(CryptoJS.enc.Uint8Arr.parse(e))},str2bytes:function(e,t="Latin1"){return CryptoJS.enc.Uint8Arr.decode(CryptoJS.enc[t].parse(e))}};let r=function(e=[]){let t=new Uint8Array(e);return{appendBytes:function(e){let n;if("number"==typeof e){let t=e.toString(16);n=new Uint8Array(t.match(/.{1,2}/g).map(e=>parseInt(e,16)))}else if("string"==typeof e){n=new Uint8Array(e.length);for(let t=0;t<e.length;t++)n[t]=e.charCodeAt(t)}else n=new Uint8Array(e);let r=new Uint8Array(t.length+n.length);r.set(t),r.set(n,t.length),t=r},finalize:function(){return t},get:function(e){return t[e]},getLength:function(){return t.length}}};async function a(e,t,n){return await crypto.subtle.importKey("raw",e.buffer,t,!1,n)}async function i(e,t){let n=await a(t,{name:"HMAC",hash:{name:"SHA-256"}},["sign","verify"]);return new Uint8Array(await crypto.subtle.sign("HMAC",n,e))}async function s(t,n,r,i=!0){let s=await a(n,"AES-CBC",["encrypt","decrypt"]),o=new Uint8Array(await crypto.subtle.encrypt({name:"AES-CBC",iv:r},s,t));return t.length%e.AESBlockSize==0&&1==i&&(o=o.slice(0,o.length-e.AESBlockSize)),o}async function o(e){return new Uint8Array(await crypto.subtle.digest("SHA-256",e.buffer))}async function l(t,n,i,o=0){let l=await a(n,"AES-CBC",["encrypt","decrypt"]),c=r(t);if(0==o){let r=new Uint8Array(e.AESBlockSize);for(let n=0;n<e.AESBlockSize;n++)r[n]=0^t[t.length-e.AESBlockSize+n];modBlockEncrypted=await s(r,n,i,!1),c.appendBytes(modBlockEncrypted)}let y=new Uint8Array(await crypto.subtle.decrypt({name:"AES-CBC",iv:i},l,c.finalize()));return 0==o&&(y=y.slice(0,y.length-e.AESBlockSize)),y}async function c(e,t){let a=r();a.appendBytes(t),a.appendBytes("\0".repeat(16));let i=a.finalize();for(let t=0;t<8192;t++){let t=r(i);t.appendBytes(n.str2bytes(e,"Utf16LE")),i=await o(t.finalize(0))}return i}return{encrypt:async function(a,o,l=(e=>{})){if(o.length>e.maxPassLen)return console.warn("Password is too long."),!1;const y=n.urandom(e.AESBlockSize),p=await c(o,y),u=n.urandom(e.AESBlockSize),f=n.urandom(32);let d=r();d.appendBytes(u),d.appendBytes(f);const w=await s(d.finalize(),p,y),B=await i(w,p);return await async function(n,a,o,l,c,y,p){let u=r();u.appendBytes("AES"),u.appendBytes(e.fileFormatVersion),u.appendBytes(0);const f="jsAesCrypt "+e.version;u.appendBytes(0),u.appendBytes(1+("CREATED_BY"+f).length),u.appendBytes("CREATED_BY"),u.appendBytes(0),u.appendBytes(f),u.appendBytes([0,128]),u.appendBytes("\0".repeat(128)),u.appendBytes([0,0]),u.appendBytes(a),u.appendBytes(o),u.appendBytes(c);let d=new t(n),w=d.getLength(),B=r(await d.readBytes(d.getLength())),A=String.fromCharCode(w%e.AESBlockSize);return cText=await s(B.finalize(),l,y),hmac0=await i(cText,l),u.appendBytes(cText),u.appendBytes(A),u.appendBytes(hmac0),await u.finalize()}(a,y,w,f,B,u)},decrypt:async function(a,s,o=(e=>{})){if(s.length>e.maxPassLen)return console.warn("Password is too long."),!1;let y=t(a);if("AES"!==await y.readBytesAsString(3)||y.getLength()<136)return console.warn("File is corrupted or not an AES Crypt \n(or jsAesCrypt) file."),!1;if(await y.readByte()!==e.fileFormatVersion)return console.warn("jsAesCrypt is only compatible with version \n2 of the AES Crypt file format."),!1;for(await y.readByte();;){let e=await y.readBytes(2);if(e.length<2)return console.warn("File is corrupted."),!1;if(0==(e=+n.arrToInt(e)))break;await y.readBytes(e)}let p=await y.readBytes(16);if(16!==p.length)return console.warn("File is corrupted."),!1;let u=await c(s,p),f=await y.readBytes(48);if(48!==f.length)return console.warn("File is corrupted."),!1;let d=await y.readBytesAsString(32);if(32!==d.length)return console.warn("File is corrupted."),!1;let w=await i(f,u);if(d!==n.bytes2str(w))return console.warn("Wrong password (or file is corrupted)."),!1;let B,A=await l(f,u,p,0),g=A.slice(0,e.AESBlockSize),S=A.slice(e.AESBlockSize,e.AESBlockSize+32),h=r(),m=r(await y.readBytes(y.getLength()-y.getCurrentPosition()-32-1)),E=await y.readBytesAsInt(1);hmac0Act=await i(m.finalize(),S);try{B=await l(m.finalize(),S,g,E)}catch{B=await l(m.finalize(),S,g,0);let t=e.AESBlockSize-E;B=B.slice(0,B.length-t)}h.appendBytes(B);let C=await y.readBytesAsString(32);return 32!==C.length?(console.warn("File is corrupted."),!1):C!==n.bytes2str(hmac0Act)?(console.warn("Bad HMAC (file is corrupted)."),!1):h.finalize()},utils:n,info:e}};